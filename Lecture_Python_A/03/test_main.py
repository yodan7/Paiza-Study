import pytest


input1 = """
5 5 3 1 3
.....
.....
.....
.....
.....
2 R
4 R
6 R
""".strip()

output1 = """
.....
.***.
.*.*.
.***.
.....
""".strip()

input2 = """
18 39 12 1 20
........................#...........#..
.......................................
.......................................
.........#........#..#.........#.......
.............................#.......#.
.......................................
...................................#...
......................................#
...................#...................
.......................................
....................................#..
.......................#.....#.....#...
..............................#........
....#..............#.....#......#......
.......................................
.....#.................................
...#..................#................
......#............................#.#.
3 R
8 R
13 L
16 R
19 L
21 L
30 R
32 L
37 R
40 L
42 R
48 R
62 R
73 R
77 R
79 R
83 L
84 R
94 R
99 L
""".strip()

output2 = """
........................#...........#..
................*******................
................*.....*................
.........#...****.#..#*........#.......
.............*........*......#.......#.
.............*........*................
.............*........*............#...
.............*........*...............#
...........***.....#..*................
.******....*..........*................
.*....*....*..........*.............#..
.*....*....*..........*#.....#.....#...
.*....*....*..........*.......#........
....#.*....*.......#..*..#......#......
......****.*..........*................
.....#...*.************................
...#.....*.*..........#................
......#..***.......................#.#.
""".strip()


def main():
    h, w, sy, sx, n = map(int, input().split())
    # 各要素の文字列を文字ごとに分け、2次元配列化
    s = [[p for p in input()] for _ in range(h)]
    # rotate = {}
    # for _ in range(n):
    #     k, v = input().split(" ")
    #     rotate[k] = v

    rotate = [input().split(" ") for _ in range(n)]

    # N, E, S, W
    dy = [-1, 0, 1, 0]
    # N, E, S, W
    dx = [0, 1, 0, -1]
    now_direction = 0 # 0, 1, 2, 3

    y, x = sy, sx
    visited = []
    t = 0
    # print(rotate)
    while True:
        if t > 99:
            # print("w")
            break
        if (not( 0 <= y <= h-1)) or (not( 0 <= x <= w-1)):
            # print("x")
            break
        if s[y][x] != ".":
            # print(t, y, x)
            # print(s[y][x])
            break 

        # 訪れた場所を記録
        s[y][x] = "*"

        if rotate and t == int(rotate[0][0]):
            lr = rotate[0][1]
            # print(t, lr,now_direction, "曲がる")
            if lr == "L":
                now_direction = (now_direction + 3) % 4
            if lr == "R":
                now_direction = (now_direction + 1) % 4
            # print(now_direction)
            rotate = rotate[1:]
        
        y += dy[now_direction]
        x += dx[now_direction]
        
        # print(t, "回目")
        t += 1

    for row in ["".join(cell) for cell in s]:
        print(row)
    
    # print(s)
    # print(h, w, sy, sx, n)


# 以下は固定
def test_main(monkeypatch) -> None:
    check(monkeypatch, main, input1, output1)
    check(monkeypatch, main, input2, output2)


def check(monkeypatch, func: None, input: str, output: str) -> None:
    import io

    stdin = io.StringIO(input)
    stdout = io.StringIO()

    with monkeypatch.context() as m:
        m.setattr("sys.stdin", stdin)
        m.setattr("sys.stdout", stdout)
        func()

    assert stdout.getvalue() == output + "\n"


if __name__ == "__main__":
    pytest.main([__file__])


# 問題文
"""
マップ上をへびが移動していきます。
マップの行数 H と列数 W ,障害物を '#' で移動可能な場所を '.' で表した H 行 W 列のマップ S_1 ... S_H , 現在の座標 sy , sx , 方向転換の回数 N が与えられます。
続けて N 回の方向転換をおこなう時刻 t_1 ... t_N, 転換する向き d_1 ... d_N が与えられます。

へびははじめは北を向いています。

へびは進む先のマスに自分の身体や障害物がない時に移動ができます。
時刻 0 から 99 までの間、へびは各時刻に次の行動を最大 100 回繰り返します。

・ 方向転換をおこなう時刻の場合、指定の向きに方向転換したのち １ マス身体を伸ばす。そうでない時は、今向いている方向に １ マス身体を伸ばす。

時刻が 99 の時の行動を終えるか、移動できなくなった時、移動を終了します。
移動終了時にへびの体のあるマスを '*' にしたマップを出力してください。

移動が可能であるということは、
「移動先のマスに自分の身体や障害物がない かつ 移動先がマップの範囲外でない」
ということを意味します。

なお、マスの座標系は左上端のマスの座標を ( y , x ) = ( 0 , 0 ) とし、
下方向が y 座標の正の向き、右方向が x 座標の正の向きとします。

移動の一例をあげます。例えば次のような入力が与えられた時は図のような移動になります。
図は、時刻 T の行動前の状態を表しています。

5 5 3 1 3       
.....       
.....       
.....       
.....       
.....       
2 R     
4 R     
6 R   
"""

# 以下は解答例
"""
h, w, sy, sx, n = map(int, input().split())
s = [list(input()) for _ in range(int(h))]
time_lr = [input().split() for _ in range(int(n))]
directions = ["N", "E", "S", "W"]
now_direction = 0
time_index = 0
s[sy][sx] = "*"

for t_now in range(100):
    if time_index < n and str(t_now) == time_lr[time_index][0]:
        d = time_lr[time_index][1]
        time_index += 1
        if d == "L":
            now_direction = (3 + now_direction) % 4
        else:
            now_direction = (1 + now_direction) % 4

    if directions[now_direction] == "N":
        sy -= 1
    elif directions[now_direction] == "E":
        sx += 1
    elif directions[now_direction] == "S":
        sy += 1
    elif directions[now_direction] == "W":
        sx -= 1

    if sx < 0 or sx >= int(w) or sy < 0 or sy >= int(h) or s[sy][sx] != ".":
        break
    else:
        s[sy][sx] = "*"

for y in range(int(h)):
    for x in range(int(w)):
        print(s[y][x], end="")
    print()
"""

# 不正解だったテストケース
"""
29 40 20 1 3
#.......................................
#.......................................
#.......................................
#.......................................
#........######################.........
#........#....................#.........
#........#....................#.........
#........#....................#.........
#........#....................#.........
#........#....................#.........
#........#....................#.........
#........######################.........
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
#.......................................
20 R
58 R
72 R
"""